---
- job-template:
    name: 'nightly/kernel-qe-ovs-ci-rhel81-nightly'
    defaults: defaults-build
    node: 'kernel-qe-ovs'
    properties:
        - ownership:
            owner: bfubel
            co-owners:
                - bfubel
                - bfubel
    parameters:
        - string:
            name: COMPOSE_77
            default: "RHEL-7.7-20190716.0"
            description: "RHEL-7.7 compose"
        - string:
            name: COMPOSE_80
            default: "RHEL-8.0.0-20190321.0"
            description: "RHEL-8.0 Compose"
        - string:
            name: RPM_OVS_SELINUX_EXTRA_77
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch-selinux-extra-policy/1.0/13.el7fdp/noarch/openvswitch-selinux-extra-policy-1.0-13.el7fdp.noarch.rpm"
            description: "RHEL-7.7 openvswitch-selinux-extra-policy rpm location"
        - string:
            name: RPM_OVS_SELINUX_EXTRA_80
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch-selinux-extra-policy/1.0/18.el8fdp/noarch/openvswitch-selinux-extra-policy-1.0-18.el8fdp.noarch.rpm"
            description: "RHEL-8.0 openvswitch-selinux-extra-policy rpm location"
        - string:
            name: RPM_OVS290_77
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch/2.9.0/117.el7fdp/x86_64/openvswitch-2.9.0-117.el7fdp.x86_64.rpm"
            description: "RHEL-7.7 OVS 2.90 RPM"
        - string:
            name: RPM_OVS211_77
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch2.11/2.11.0/21.el7fdp/x86_64/openvswitch2.11-2.11.0-21.el7fdp.x86_64.rpm"
            description: "RHEL-7.7 OVS 2.11 RPM"
        - string:
            name: RPM_OVS211_80
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch2.11/2.11.0/21.el8fdp/x86_64/openvswitch2.11-2.11.0-21.el8fdp.x86_64.rpm"
            description: "RHEL-8.0 OVS 2.11 RPM"
        - string:
            name: RPM_DRIVERCTL
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/driverctl/0.108/1.el8/noarch/driverctl-0.108-1.el8.noarch.rpm"
            description:
        - string:
            name: RPM_DPDK_77
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/dpdk/18.11.2/1.el7_6/x86_64/dpdk-18.11.2-1.el7_6.x86_64.rpm"
            description:
        - string:
            name: RPM_DPDK_TOOLS_77
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/dpdk/18.11.2/1.el7_6/x86_64/dpdk-tools-18.11.2-1.el7_6.x86_64.rpm"
            description:
        - string:
            name: RPM_DPDK_80
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/dpdk/18.11.2/2.el8/x86_64/dpdk-18.11.2-2.el8.x86_64.rpm"
            description:
        - string:
            name: RPM_DPDK_TOOLS_80
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/dpdk/18.11.2/2.el8/x86_64/dpdk-tools-18.11.2-2.el8.x86_64.rpm"
            description:
        - string:
            name: CHOST
            default: "netqe22.knqe.lab.eng.bos.redhat.com"
            description: Client Host (DUT1)
        - string:
            name: CNIC_PORT0_77
            default: "p6p1"
            description: Client nic_port0
        - string:
            name: CNIC_PORT0_80
            default: "enp3s0f0"
            description: Client nic_port0
        - string:
            name: CNIC_PORT1_77
            default: "p6p2"
            description: Client nic_port0
        - string:
            name: CNIC_PORT1_80
            default: "enp3s0f0"
            description: Client nic_port0
        - string:
            name: TREX_PATH
            default: "/root/v2.36/"
            description: Server nic_port0
        - string:
            name: XENA_IP
            default: "10.19.15.19"
            description: Server nic_port0
        - string:
            name: NETSCOUT_NIC1
            default: "NETQE22_P6P1"
            description: Server nic_port0
        - string:
            name: NETSCOUT_NIC2
            default: "NETQE22_P6P2"
            description: Server nic_port0
        - string:
            name: XENA_IP
            default: "10.19.15.19"
            description: Server nic_port0
        - string:
            name: XENA_MODULE1
            default: "7"
            description: Server nic_port0
        - string:
            name: XENA_MODULE2
            default: "7"
            description: Server nic_port0
        - string:
            name: RESERVETIME
            default: "86400"
            description: RESERVETIME
        - string:
            name: KILLTIMEOVERRIDE
            default: "64800"
            description: KILLTIMEOVERRIDE
        - string:
            name: ARCH
            default: x86_64
            description: ARCH
        - string:
            name: NOTES
            default: ""
            description: Run Notes
        - string:
            name: TEST_INFO
            default: "19.F"
            description: "Notes to be added to Beaker job whiteboard"
        - string:
            name: RPM_PYTHON_XML
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/python-lxml/4.2.3/1.el8/x86_64/python3-lxml-4.2.3-1.el8.x86_64.rpm"
            description: Python XML

    triggers:
        - ci-trigger:
            # Sample job trigger for official Brew builds
            # Build NVR in $name $version $release
            jms-selector: CI_TYPE = 'tier-2-validation-testing-done' AND CI_NAME ='rtt-accepted-publisher' AND PRODUCT = 'RHEL' AND VERSION LIKE '8.1%' AND TYPE = 'nightly'
            override-topic: "Consumer.rh-jenkins-ci-plugin.bfubel-kernelqe-dd8829e0-214c-48d2-9c43-13a60149e201.VirtualTopic.eng.rtt.ci.>"

    wrappers:
        - build-name:
            name: ${{ENV,var="BUILD_TAG"}}
    builders:
        # - python: |
        #     import ast
        #     import json
        #     import os
        #     import pprint

        #     def main():
        #       # Cleanup Environment
        #       PROP_FILE=os.environ['WORKSPACE']+'/job1.properties'
        #       if os.path.isfile(PROP_FILE):
        #          os.remove(PROP_FILE)
        #          print('Cleaned up '+PROP_FILE)
        #       else:
        #          print(os.environ['WORKSPACE']+'/job1.properties not found')

        #       print('Starting CI Message Python script')
        #       # Get the list of user's 
        #       # environment variables 
        #       # env_var = os.environ 
  
        #       # Print the list of user's 
        #       # environment variables 
        #       # print("User's Environment variable:") 
        #       # pprint.pprint(dict(env_var), width = 1) 

        #       MSG_FILE=os.environ['WORKSPACE']+'/CI_MESSAGE.json'
        #       COMPOSE = os.environ['compose']
        #       if (os.environ.get('CI_MESSAGE')):
        #         # convert message to json object
        #         print('CI Trigger load new CI_MEASSAGE')
        #         message = json.loads(os.getenv('CI_MESSAGE'))
        #         print("Triggered CI Message:\n".format(json.dumps(message, indent=4)))
        #         COMPOSE=message['system'][0]['os']
        #         with open(os.environ['WORKSPACE']+'/CI_MESSAGE.json', "w") as CI_JSON:
        #          CI_JSON.write(os.environ.get('CI_MESSAGE'))
        #         with open(os.environ['WORKSPACE']+'/CI_MESSAGE.txt', "w") as CI_TXT:
        #          CI_JSON.write(os.environ.get('CI_MESSAGE'))
        #       else:
        #         # with open(MSG_FILE) as f:
        #         #   message = json.load(f)
        #         #   print('Manual Trigger load old CI_MESSAGE.json')
        #         #   print("Triggered CI Manual Message:\n".format(json.dumps(message, indent=4)))
        #         # compose=message['system'][0]['os']  # Test Loading Compose from old CI_MESSAGE
        #         print('Manual Trigger using provided compose')
 
        #       # Save updated Compose 
        #       os.environ['compose']=COMPOSE
        #       print('New Compose='+os.environ['compose'])
        #       with open(os.environ['WORKSPACE']+'/job1.properties', "w") as job1:
        #         job1.write('COMPOSE='+os.environ['compose']+'\n')

        #     if __name__ == "__main__":
        #       main()

        - inject:
              properties-file: $WORKSPACE/job1.properties

        - shell: |
            # #!/bin/bash
            # echo '****************************** Submit Beaker jobs ************************'
            # echo $COMPOSE
            # cat $WORKSPACE/job1.properties
            # rm -f $WORKSPACE/job1.properties

            # ##########################
            # #Test 1: Sanity_Check [ixgbe] [OVS_2.11 [8.1] [Xena Module 3] [$CHOST]
            # ##########################
            # echo "##################################################################"
            # echo "#Test 1: sanity_check ixgbe RHEL-8.1  OVS 2.11                   #"
            # echo "#        Machine netqe13                                         #"
            # echo "#        XENA_M3P0,XENA_M3P0                                     #"
            # echo "#        Results need traffic search beeker output for           #"
            # echo "# Search the key word 'Test case google sheet link is as follow' #"
            # echo "#                                                                #"
            # echo "##################################################################"
            # rm -f $WORKSPACE/job1html.txt
            # touch $WORKSPACE/job1.xml
            # cat <<EOT > $WORKSPACE/job1.xml
            # <job retention_tag="60days">
            #   <whiteboard>Nighty Rhel81-ovs211-Sanity_check netqe13.knqe.lab.eng.bos.redhat.com, $COMPOSE, https://platform-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/job/Interopt/job/kernel-qe-ovs211-ci-rhel78-interopt/82/ FDP 18.11, , openvswitch/sanity_check</whiteboard>
            #   <recipeSet priority="High">
            #     <recipe whiteboard="Interopt Rhel78-ovs211-Sanity_check netqe13.knqe.lab.eng.bos.redhat.com, RHEL-7.8-20191001.0, https://platform-jenkins.rhev-ci-vms.eng.rdu2.redhat.com/job/Interopt/job/kernel-qe-ovs211-ci-rhel78-interopt/82/ FDP 18.11, , openvswitch/sanity_check" role="None" ks_meta="harness='restraint-rhts beakerlib'" kernel_options="" kernel_options_post="">
            #       <autopick random="false"/>
            #       <watchdog/>
            #       <packages/>
            #       <ks_appends>
            #         <ks_append><![CDATA[
            # %post --log=/root/my-ks-post.log

            # test -f /etc/dnf/dnf.conf && echo strict=0 >>/etc/dnf/dnf.conf

            # read type distro <<< $(awk -F/+ '/^baseurl/{ for (i=3;i<NF;i++) { if ($(i+1) ~ /RHEL-/) { print($i, $(i+1)); break }}}' /etc/yum.repos.d/beaker-BaseOS.repo)
            # if [[ "$distro" = RHEL-8* ]]; then
            #     read prefix ver time <<< ${distro//-/ }
            #     URL=http://download.devel.redhat.com/rhel-8/$type/BUILDROOT-8/BUILDROOT-$ver-RHEL-8-$time/compose/Buildroot/$(arch)/os
            #     URL=http://download.devel.redhat.com/rhel-8/$type/BUILDROOT-8/latest-BUILDROOT-8-RHEL-8/compose/Buildroot/$(arch)/os
            #     cat <<-EOF >/etc/yum.repos.d/beaker-buildroot.repo
            #     [beaker-buildroot]
            #     name=beaker-buildroot
            #     baseurl=$URL
            #     enabled=1
            #     gpgcheck=0
            #     skip_if_unavailable=1
            #     EOF
            # fi

            # yum install -y gcc wget screen bc redhat-lsb-core sg3_utils sg3_utils-libs sg3_utils-devel rsyslog python2
            # yum install -y libnsl2 libtirpc-devel python-lxml

            # [[ -f /usr/bin/python ]] || {
            #     if [[ -f /usr/bin/python2 ]]; then
            #         alternatives --set python /usr/bin/python2
            #     elif [[ -f /usr/bin/python3 ]]; then
            #         alternatives --set python /usr/bin/python3
            #     fi
            # }

            # #yum update -y pkg1 pkg2 --nogpgcheck --repofrompath=abc,http://x.y.z/path/to/repo
            # %end


            #                 ]]></ks_append>
            #       </ks_appends>
            #       <repos/>
            #       <distroRequires>
            #                 <and>
            #                     <distro_variant op="=" value="BaseOS"/>
            #                     <distro_method op="=" value="nfs"/>
            #                     <distro_name op="=" value="$COMPOSE_80"/>
            #                     <distro_arch op="=" value="x86_64"/>
            #                 </and>
            #                 <or>
            #                 </or>
            #                 <not>
            #                 </not>
            #             </distroRequires>
            #       <hostRequires>
            #                 <and>
            #                     <hostname op="like" value="$CHOST"/>
            #                 </and>
            #                 <system_type op="=" value="machine"/>
            #                 <or>
            #                 </or>
            #                 <not>
            #                 </not>
            #             </hostRequires>
            #       <partitions>
            #             </partitions>
            #       <task name="/distribution/check-install" role="STANDALONE">
            #         <params>
            #           <param name="DISTRO_BUILD" value="$COMPOSE_80"/>
            #         </params>
            #       </task>
            #       <task name="/kernel/networking/openvswitch/sanity_check" role="STANDALONE">
            #         <params>
            #           <param name="dbg_flag" value="set -x"/>
            #           <param name="RPM_OVS_SELINUX_EXTRA_POLICY" value="$RPM_OVS_SELINUX_EXTRA_80"/>
            #           <param name="RPM_OVS" value="$RPM_OVS211_80"/>
            #           <param name="NAY" value="YES"/>
            #           <param name="DISTRO_BUILD" value="$COMPOSE_80"/>
            #         </params>
            #       </task>
            #     </recipe>
            #   </recipeSet>
            # </job>
            # EOT
            # cat $WORKSPACE/job1.xml
            # bkr job-submit $WORKSPACE/job1.xml |tee $WORKSPACE/bkr_job1.txt
            # grep Submitted $WORKSPACE/bkr_job1.txt >$WORKSPACE/bkr_jobnum1.txt
            # BKR_JOBID1=`cut -d\' -f2 $WORKSPACE/bkr_jobnum1.txt`
            # echo BKR_JOBID1=$BKR_JOBID2 >> $WORKSPACE/job1.properties
            # echo BKR_JOBID1=$BKR_JOBID2 >> $WORKSPACE/job1html.txt
            # BKR_JOBID1html=`cut -d\: -f2 $WORKSPACE/job1html.txt`
            # echo 'BKR_JOBID1html='$BKR_JOBID1html >> $WORKSPACE/job1.properties
            # echo ARCH=$ARCH >> $WORKSPACE/job1.properties

            # ##########################
            # #Sanity Test2: sanity_check#
            # ##########################
            # rm -f $WORKSPACE/job1.txt
            # rm -f $WORKSPACE/job1html.txt
            # rm -f $WORKSPAVE/bkr_jobnum1.txt
            # echo "Test 1: sanity_check =============================================="

            # grep Submitted $WORKSPACE/bkr_job1.txt >$WORKSPACE/bkr_jobnum1.txt
            # BKR_JOBID1=`cut -d\' -f2 $WORKSPACE/bkr_jobnum1.txt`
            # echo BKR_JOBID1=$BKR_JOBID1 >> $WORKSPACE/job1.properties
            # echo BKR_JOBID1=$BKR_JOBID1 >> $WORKSPACE/job1html.txt
            # BKR_JOBID1html=`cut -d\: -f2 $WORKSPACE/job1html.txt`
            # echo 'BKR_JOBID1html='$BKR_JOBID1html >> $WORKSPACE/job1.properties
            # echo ARCH=$ARCH >> $WORKSPACE/job1.properties

            # ##########################
            # #Sanity Test 2: sellinux Test#
            # ##########################
            # rm -f $WORKSPACE/job2html.txt
            # echo "Test 2: selinux =============================================="
            # cd /mnt/tests/kernel/networking/ovs-dpdk-selinux
            # # lstest | runtest $compose  --variant=BaseOS --arch=$ARCH  --machine=$machine --systype=machine \
            # # --param=nic_port0=$nic_port0 --param=nic_port1=$nic_port1 \
            # # --param=SELINUX="Enforcing" --cmd='yum install -y policycoreutils-python $RPM_PYTHON_XML $RPM_OVS_SELINUX_EXTRA_POLICY $RPM_OVS $RPM_DRIVERCTL' \
            # # --wb "RHEL-81 Nightly $machine Build_URL=$BUILD_URL RPM_OVS=$RPM_OVS, compose=$compose, Test=ovs-dpdk-selinux" |tee $WORKSPACE/bkr_job2.txt
            # grep Submitted $WORKSPACE/bkr_job2.txt >$WORKSPACE/bkr_jobnum2.txt
            # BKR_JOBID2=`cut -d\' -f2 $WORKSPACE/bkr_jobnum2.txt`
            # echo BKR_JOBID2=$BKR_JOBID2 >> $WORKSPACE/job1.properties
            # echo BKR_JOBID2=$BKR_JOBID2 >> $WORKSPACE/job2html.txt
            # BKR_JOBID2html=`cut -d\: -f2 $WORKSPACE/job2html.txt`
            # echo 'BKR_JOBID2html='$BKR_JOBID2html >> $WORKSPACE/job1.properties


            # ##########################
            # #Sanity Test 3: vsperf_CI #
            # ##########################
            # rm -f $WORKSPACE/job3html.txt
            # echo "Test 3: Sanity userspace_commands =============================================="
            # cd /mnt/tests/kernel/networking/openvswitch/userspace_commands
            # lstest | runtest $compose --variant=baseos --arch=x86_64 --machine=$machine --systype=machine --param=dbg_flag="set -x" \
            # --param=RPM_OVS_SELINUX_EXTRA_POLICY=$RPM_OVS_SELINUX_EXTRA_POLICY --param=RPM_OVS=$RPM_OVS --cmd="yum install -y policycoreutils-python;rpm -ivh --force $RPM_OVS_SELINUX_EXTRA_POLICY" \
            # --wb=" $name RHEL81 nightly  $machine $BUILD_URL /n $fdp_release, $ovs_rpm_name, $compose, openvswitch/userspace_commands" |tee $WORKSPACE/bkr_job3.txt
            # grep Submitted $WORKSPACE/bkr_job3.txt >$WORKSPACE/bkr_jobnum3.txt
            # BKR_JOBID3=`cut -d\' -f2 $WORKSPACE/bkr_jobnum3.txt`
            # echo BKR_JOBID3=$BKR_JOBID3 >> $WORKSPACE/job1.properties
            # echo BKR_JOBID3=$BKR_JOBID3 >> $WORKSPACE/job3html.txt
            # BKR_JOBID3html=`cut -d\: -f2 $WORKSPACE/job3html.txt`
            # echo 'BKR_JOBID3html='$BKR_JOBID3html >> $WORKSPACE/job1.properties
            # # Notes: removed nic_port0,1 and nic_port0,1 and NIC from job2 and job3

        - inject:
            properties-file: $WORKSPACE/job1.properties
        - shell: |
            #!/bin/bash -x
            BKR_JOBID1=`cut -d\' -f2 $WORKSPACE/bkr_jobnum1.txt`
            echo $BKR_JOBID1 >> $WORKSPACE/job1.properties
            bkr job-watch $BKR_JOBID1
            bkr job-results --format junit-xml $BKR_JOBID1 > $WORKSPACE/jobid1.xml
            TESTS_JOB1=$(grep 'testsuite name' $WORKSPACE/jobid1.xml)
            echo $TESTS_JOB1

            #####################################################################
            # Get Beaker Job 1 job-results
            #####################################################################
            BKR_TESTS_JOB1_EXEC=0
            BKR_TESTS_JOB1_FAILED=0
            for jobid in $BKR_JOBID1; do
                bkr job-results --format junit-xml $jobid > $WORKSPACE/$jobid1.xml
                    for testsuite in $(grep hostname $WORKSPACE/$jobid1.xml); do
                        echo $testsuite | grep tests= && BKR_TESTS_JOB1_EXEC=$((BKR_TESTS_JOB1_EXEC+$(echo $testsuite | cut -d'"' -f2)))
                        echo $testsuite | grep failures= && BKR_TESTS_JOB1_FAILED=$((BKR_TESTS_JOB1_FAILED+$(echo $testsuite | cut -d'"' -f2)))
                    done
                done
            echo BKR_TESTS_JOB1_EXEC=$BKR_TESTS_JOB1_EXEC >> $WORKSPACE/job1.properties
            echo BKR_TESTS_JOB1_FAILED=$BKR_TESTS_JOB1_FAILED >> $WORKSPACE/job1.properties
            BKR_TESTS_JOB1=('[{{"executor": "beaker", "arch": "'"$ARCH"'", "executed": "'"$BKR_TESTS_JOB1_EXEC"'", "failed": "'"$BKR_TESTS_JOB1_FAILED"'"}}]')
            echo $BKR_TESTS_JOB1
            echo "BKR_TESTS_JOB1=$BKR_TESTS_JOB1" >> $WORKSPACE/job1.properties


            #!/bin/bash -x
            BKR_JOBID2=`cut -d\' -f2 $WORKSPACE/bkr_jobnum2.txt`
            echo BKR_JOBID2=$BKR_JOBID2 >> $WORKSPACE/job1.properties
            bkr job-watch $BKR_JOBID2
            bkr job-results --format junit-xml $BKR_JOBID2 > $WORKSPACE/jobid1.xml
            TESTS_JOB2=$(grep 'testsuite name' $WORKSPACE/jobid2.xml)
            echo $TESTS_JOB2

            #####################################################################
            # Get Beaker Job 2 job-results
            #####################################################################
            BKR_TESTS_JOB2_EXEC=0
            BKR_TESTS_JOB2_FAILED=0
            for jobid in $BKR_JOBID2; do
                bkr job-results --format junit-xml $jobid > $WORKSPACE/$jobid2.xml
                    for testsuite in $(grep hostname $WORKSPACE/$jobid2.xml); do
                        echo $testsuite | grep tests= && BKR_TESTS_JOB2_EXEC=$((BKR_TESTS_JOB2_EXEC+$(echo $testsuite | cut -d'"' -f2)))
                        echo $testsuite | grep failures= && BKR_TESTS_JOB2_FAILED=$((BKR_TESTS_JOB2_FAILED+$(echo $testsuite | cut -d'"' -f2)))
                    done
                done
            echo BKR_TESTS_JOB2_EXEC=$BKR_TESTS_JOB2_EXEC >> $WORKSPACE/job1.properties
            echo BKR_TESTS_JOB2_FAILED=$BKR_TESTS_JOB2_FAILED >> $WORKSPACE/job1.properties
            BKR_TESTS_JOB2=('[{{"executor": "beaker", "arch": "'"$ARCH"'", "executed": "'"$BKR_TESTS_JOB2_EXEC"'", "failed": "'"$BKR_TESTS_JOB2_FAILED"'"}}]')
            echo $BKR_TESTS_JOB2
            echo "BKR_TESTS_JOB2=$BKR_TESTS_JOB2" >> $WORKSPACE/job1.properties

            #echo $?
            #!/bin/bash -x
            BKR_JOBID3=`cut -d\' -f2 $WORKSPACE/bkr_jobnum3.txt`
            echo BKR_JOBID3=$BKR_JOBID3 >> $WORKSPACE/job1.properties
            bkr job-watch $BKR_JOBID3
            #echo $?
            bkr job-results --format junit-xml $BKR_JOBID3 > $WORKSPACE/jobid3.xml
            TESTS_JOB3=$(grep 'testsuite name' $WORKSPACE/jobid3.xml)
            echo $TESTS_JOB3

            #####################################################################
            # Get Beaker Job 3 job-results
            #####################################################################
            BKR_TESTS_JOB3_EXEC=0
            BKR_TESTS_JOB3_FAILED=0
            for jobid in $BKR_JOBID3; do
                bkr job-results --format junit-xml $jobid > $WORKSPACE/$jobid3.xml
                    for testsuite in $(grep hostname $WORKSPACE/$jobid3.xml); do
                        echo $testsuite | grep tests= && BKR_TESTS_JOB3_EXEC=$((BKR_TESTS_JOB3_EXEC+$(echo $testsuite | cut -d'"' -f2)))
                        echo $testsuite | grep failures= && BKR_TESTS_JOB3_FAILED=$((BKR_TESTS_JOB3_FAILED+$(echo $testsuite | cut -d'"' -f2)))
                    done
                done
            echo BKR_TESTS_JOB3_EXEC=$BKR_TESTS_JOB3_EXEC >> $WORKSPACE/job1.properties
            echo BKR_TESTS_JOB3_FAILED=$BKR_TESTS_JOB3_FAILED >> $WORKSPACE/job1.properties
            BKR_TESTS_JOB3=('[{{"executor": "beaker", "arch": "'"$ARCH"'", "executed": "'"$BKR_TESTS_JOB3_EXEC"'", "failed": "'"$BKR_TESTS_JOB3_FAILED"'"}}]')
            echo $BKR_TESTS_JOB3
            echo "BKR_TESTS_JOB3=$BKR_TESTS_JOB3" >> $WORKSPACE/job1.properties

        # inject when all the env varables are all defined ??
        - inject:
            properties-file: $WORKSPACE/job1.properties

    publishers:
        # - postbuildscript:
        #    builders:
        #       - shell: 'echo "Shell execution"'
        #           publishers:
         # - postbuildscript:
         #    mark-unstable-if-failed: true
            # builders:
            #   build-on:
            #     - SUCCESS
            #     - UNSTABLE
                # build-steps:
                #   - shell: |
                #       #!/bin/bash
                #       echo "Jenkins job failed or canceled - canceling any submitted Beaker jobs"
                #       bkr job-cancel ${{BKR_JOBID1}}
                #       - postbuildscript:
        - email-ext:
            recipients: bfubel@redhat.com
            subject: nightly/kernel-qe-ovs-ci-rhel81-nightly $machine, $Compose, $BUILD_URL $RPM_OVS
            body: |
              Beaker Job "kernel/networking/Sanity_Check" job at https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID1html"}} Executed=${{ENV,var="BKR_TESTS_JOB1_EXEC"}} Failed=${{ENV,var="BKR_TESTS_JOB1_FAILED"}}
                          Results ${{ENV,var="BKR_TESTS_JOB1"}}
              Beaker Job "kernel/networking/ovs-dpdk-selinux" job at https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID2html"}} Tests executed=${{ENV,var="BKR_TESTS_JOB2_EXEC"}} Tests failed=${{ENV,var="BKR_TESTS_JOB2_FAILED"}}
                          Results ${{ENV,var="BKR_TESTS_JOB2"}}
              Beaker Job "kernel/networking/vsperf_CI" job at https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID3html"}} Tests executed=${{ENV,var="BKR_TESTS_JOB3_EXEC"}} Tests failed=${{ENV,var="BKR_TESTS_JOB3_FAILED"}}
                          Results ${{ENV,var="BKR_TESTS_JOB3"}}
              nightly/kernel-qe-ovs-ci-rhel81-nightly
              Notes, ${{ENV,var="NOTES"}}
              $BUILD_URL,Sanity_Check,${{ENV,var="BKR_TESTS_JOB1_EXEC"}},${{ENV,var="BKR_TESTS_JOB1_FAILED"}},ovs-dpdk-selinux,${{ENV,var="BKR_TESTS_JOB2_EXEC"}},${{ENV,var="BKR_TESTS_JOB2_FAILED"}},vsperf_CI,${{ENV,var="BKR_TESTS_JOB3_EXEC"}},${{ENV,var="BKR_TESTS_JOB3_FAILED"}}
              Job Parameters
              Compose,${{ENV,var="Compose"}}
              RPM_OVS,${{ENV,var="RPM_OVS"}}
              RPM_CONTAINER_SELINUX_POLICY,${{ENV,var="RPM_CONTAINER_SELINUX_POLICY"}}
              RPM_OVS_SELINUX_EXTRA_POLICY,${{ENV,var="RPM_OVS_SELINUX_EXTRA_POLICY"}}
              fdp_release,${{ENV,var="fdp_release"}}
              machine,${{ENV,var="machine"}}
              nic_port0,${{ENV,var="nic_port0"}}
              nic_port1,${{ENV,var="nic_port1"}}
              ARCH,${{ENV,var="ARCH"}}

            notify-every-unstable-build: false
            send-to-individuals: true
            always: true
        # - workspace-cleanup:
        # #   include:
        # #       - "*"
        # #   exclude:
        # #       #need resources file to trigger teardown job
        # #       - "job1.properties.txt"
        # #   dirmatch: true
        #     clean-if:
        #         - success: true
        #         - not-built: true


- project:
    name: kernel-qe
    jobs:
      - 'nightly/kernel-qe-ovs-ci-rhel81-nightly'
###########################################################
#                        History                          #
###########################################################
#Date            Modifier    Details
#19-Aug-2019     bfubel    Created off 7.7 Nightly Build
#                          Need to Change to 8.1 Image. starting with 7.7 to get baseline
#                          7.7 Job 3 10 run 2 pass.
#
