- job-template:
    name: 'Interopt/kernel-qe-ovs29-ci-rhel77-interopt'
    defaults: defaults-build
    node: 'kernel-qe-ovs'
    properties:
        - ownership:
            owner: bfubel
            co-owners:
                - bfubel
                - bfubel
    parameters:
        - string:
            name: NOTES
            default: "20.C"
            description: Run Notes
        - string:
            name: RPM_OVS
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch/2.9.0/127.el7fdp/x86_64/openvswitch-2.9.0-127.el7fdp.x86_64.rpm"
            description: RPM_OVS brew location of OVS RPM
        - string:
            name: RPM_CONTAINER_SELINUX_POLICY
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/container-selinux/2.84/2.el7_6/noarch/container-selinux-2.84-2.el7_6.noarch.rpm"
            description: (RHEL 7.x) RPM_CONTAINER_SELINUX_POLICY brew location of OVS RPM
        - string:
            name: RPM_OVS_SELINUX_EXTRA_POLICY
            default:  "http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch-selinux-extra-policy/1.0/15.el7fdp/noarch/openvswitch-selinux-extra-policy-1.0-15.el7fdp.noarch.rpm"
            description: RPM_OVS_SELINUX_EXTRA_POLICY brew location of  RPM
        - string:
            name: dpdk_rpm
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/dpdk/18.11.5/1.el7_8/x86_64/dpdk-18.11.5-1.el7_8.x86_64.rpm"
            description: dpdk rpm location
        - string:
            name: dpdk_tools_rpm
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/dpdk/18.11.5/1.el7_8/x86_64/dpdk-tools-18.11.5-1.el7_8.x86_64.rpm"
            description: dpdk tools rpm location
        - string:
            name: RPM_DRIVERCTL
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/driverctl/0.101/1.el7fdp/noarch/driverctl-0.101-1.el7fdp.noarch.rpm"
            description: RPM of DRIVERCTL
        - string:
            name: fdp_release
            default: FDP 18.11
            description: fdp_release
        - string:
           name: compose
           default: RHEL-7.7-updates-20190813.0
           description: compose
        - string:
            name: machine
            default: netqe14.knqe.lab.eng.bos.redhat.com
            description: machine
        - string:
            name: nic_port0
            default: p1p1
            description: First Nic port to use
        - string:
            name: nic_port1
            default: p1p2
            description: Second Nic port to use
        - string:
            name: ARCH
            default: x86_64
            description: ARCH
        - string:
            name: RPM_PYTHON_XML
            default: "http://download-node-02.eng.bos.redhat.com/brewroot/packages/python-lxml/4.2.3/1.el8/x86_64/python3-lxml-4.2.3-1.el8.x86_64.rpm"
            description: Python XML
        # - string:
        #     name: BREW_TASKID
        #     default: '21199235'
        #     description: 'OVS brew build ID for manual trigger. Example: 21199235. '
    triggers:
        - ci-trigger:
            # Sample job trigger for official Brew builds
            # Build NVR in $name $version $release
            override-topic: "Consumer.rh-jenkins-ci-plugin.5771dab6-884a-4a39-98d7-f04e4dcc511c.VirtualTopic.qe.ci.product-scenario.rywillia.build.complete.>"
            message-checks:
                - field: $..products.*.nvr
                  value: ovs-2.9
                - field: $..products.*.nvr
                  value: RHEL-7.7.*


    wrappers:
        - build-name:
            name: ${{ENV,var="BUILD_TAG"}}
    builders:
        - shell: |
            #!/bin/bash
            echo 'Parse JMS CI_MESSAGE **************************************************'
            echo 'WORKSPACE='$WORKSPACE
            KEYTAB="/etc/jenkins.keytab-kernel-qe-jenkins.rhev-ci-vms.eng.rdu2.redhat.com"
            PRINCIPAL="jenkins/kernel-qe-jenkins.rhev-ci-vms.eng.rdu2.redhat.com@REDHAT.COM"
            #kinit -k -t $KEYTAB $PRINCIPAL

            # remove values from previous build
            > $WORKSPACE/CI_MESSAGE_ENV.txt

            #echo compose=$(bkr distro-trees-list --name=RHEL-7.7% --limit=1 | grep Name | awk '{{print $2}}') >> "$WORKSPACE/job1.properties"
            #echo compose=$compose >> $WORKSPACE/job1.properties 
            #echo compose=$compose
            if ! [ -z "${{CI_MESSAGE}}" ]
            then
              echo "CI trigger!*******************************************************"
              echo ${{CI_MESSAGE}} | tee $WORKSPACE/CI_MESSAGE.txt
              echo $CI_MESSAGE | tee $WORKSPACE/CI_MESSAGE.json
              compose=$(bkr distro-trees-list --name=RHEL-7.7% --limit=1 | grep Name | awk '{{print $2}}') 
              echo compose=$compose >> $WORKSPACE/job1.properties 
              #Parsing BREW TASK ID
              # echo "Setting RE_TASK_ID"
              # RE_TASK_ID='"id": ([0-9]+),'
              # if [[  $CI_MESSAGE =~ $RE_TASK_ID ]]
              # then
              #   echo "Brew task id parsed to be ${{BASH_REMATCH[1]}}"
              #   BREW_TASKID=${{BASH_REMATCH[1]}}
              #   echo "BREW_TASKID=${{BREW_TASKID}}" >>  $WORKSPACE/CI_MESSAGE_ENV.txt
              # else
              #   echo "Id searched with regex '${{RE_TASK_ID}}' was not found!"
              #   return 1 2> /dev/null || exit 1
              # fi
            else
              echo "Manual trigger!**************************************************"
              echo compose=$compose
              echo "Maunal Triggered Setting Fake CI_MESSAGE"
              CI_MESSAGE=`cat /root/CI_INTEROPT.txt`
              CI_MESSAGE.json=`cat /root/CI_INTEROPT.json`
              echo "Brew task id is ${{BREW_TASKID}}"
              echo "BREW_TASKID=${{BREW_TASKID}}" >>  $WORKSPACE/CI_MESSAGE_ENV.txt
              echo "Compose=${{compose}}" >> $WORKSPACE/job1.properties
              echo "compose=$compose" >> $WORKSPACE/job1.properties 
            fi

        - inject:
            properties-file: $WORKSPACE/job1.properties

        - shell: |
            #!/bin/bash
            echo '****************************** Submit Beaker jobs ************************'
            cat $WORKSPACE/job1.properties
            # Use the OVS RPM in the Build parameters
            # echo 'BREW_ID='$BREW_ID
            # echo 'build='$build
            # rpm_location=`brew buildinfo $BREW_ID | grep $build |grep $ARCH`
            # echo 'OVS_RPM='$rpm_location
            # echo "$rpm_location/\/mnt\/redhat/http://download.eng.bos.redhat.com"
            # RPM_OVS="$rpm_location/\/mnt\/redhat/http://download.eng.bos.redhat.com"
            echo 'RPM_OVS='$RPM_OVS

            rm -f $WORKSPACE/job1.properties
            rm -f $WORKSPACE/job1html.txt
            fdp_release="FDP 18.11"
            #compose="RHEL-7.7"
            #RPM_OVS_SELINUX_EXTRA_POLICY=http://download-node-02.eng.bos.redhat.com/brewroot/packages/openvswitch-selinux-extra-policy/1.0/7.el7fdp/noarch/openvswitch-selinux-extra-policy-1.0-7.el7fdp.noarch.rpm

            ##########################
            #Sanity Test 1: sanity_check#
            ##########################
            rm -f $WORKSPACE/job1html.txt
            echo "Test 1: sanity_check =============================================="
            rhos_test_version="14"
            # cd /mnt/tests/kernel/networking/openvswitch/sanity_check
            # lstest | runtest $compose --variant='client' --arch=$ARCH --machine=$machine --systype=machine  --cmd='yum install -y $RPM_PYTHON_XML $dpdk_rpm $dpdk_tools_rpm' $RPM_OVS" \
            # --param=RPM_OVS_SELINUX_EXTRA_POLICY=$RPM_OVS_SELINUX_EXTRA_POLICY --param=RPM_OVS=$RPM_OVS --param=NAY="yes" --param=nicmum="2" \
            # --param=nicdriver="ixgbe" --param=topo="nic" --wb=" RHEL-81 Interopt $machine Build_URL=$BUILD_URL /n FDP_RELESAE=$fdp_release, RPM_OVS=$RPM_OVS, Compose=$compose, Test=openvswitch/sanity_check" |tee $WORKSPACE/bkr_job1.txt

            cd /mnt/tests/kernel/networking/openvswitch/sanity_check
            lstest | runtest $compose --variant=client --arch=$ARCH --machine=$machine --systype=machine --param=dbg_flag="set -x" \
            --param=RPM_CONTAINER_SELINUX_POLICY=$RPM_CONTAINER_SELINUX_POLICY --param=RPM_OVS_SELINUX_EXTRA_POLICY=$RPM_OVS_SELINUX_EXTRA_POLICY \
            --param=RPM_OVS=$RPM_OVS  --param=NAY='YES' --param=skip_traffic_tests='yes' --wb="Interopt Rhel77-ovs29-Sanity_check $machine, $compose, $BUILD_URL $fdp_release, $ovs_rpm_name, openvswitch/sanity_check" |tee $WORKSPACE/bkr_job1.txt
            grep Submitted $WORKSPACE/bkr_job1.txt >$WORKSPACE/bkr_jobnum1.txt
            BKR_JOBID1=`cut -d\' -f2 $WORKSPACE/bkr_jobnum1.txt`
            echo BKR_JOBID1=$BKR_JOBID1 >> $WORKSPACE/job1.properties
            echo BKR_JOBID1=$BKR_JOBID1 >> $WORKSPACE/job1html.txt
            BKR_JOBID1html=`cut -d\: -f2 $WORKSPACE/job1html.txt`
            echo 'BKR_JOBID1html='$BKR_JOBID1html >> $WORKSPACE/job1.properties
            echo ARCH=$ARCH >> $WORKSPACE/job1.properties

            ##########################
            #Sanity Test 2: sellinux Test#
            ##########################
            rm -f $WORKSPACE/job2html.txt
            echo "Test 2: selinux =============================================="
            cd /mnt/tests/kernel/networking/ovs-dpdk-selinux
            lstest | runtest $compose --variant=server --arch=x86_64 --machine=$machine --systype=machine --param=dbg_flag="set -x" --param=nic_port0=$nic_port0 \
            --param=nic_port1=$nic_port1 --cmd="yum install -y policycoreutils-python $RPM_CONTAINER_SELINUX_POLICY  $RPM_OVS_SELINUX_EXTRA_POLICY $RPM_CONTAINER_SELINUX_POLICY $RPM_OVS \
            http://download-node-02.eng.bos.redhat.com/brewroot/packages/driverctl/0.101/1.el7fdp/noarch/driverctl-0.101-1.el7fdp.noarch.rpm" \
            --wb "Interopt Rhel77-ovs29-ovs-dpdk-selinux $machine, $compose, $BUILD_URL $fdp_release, $RPM_OVS, ovs-dpdk-selinux"|tee $WORKSPACE/bkr_job2.txt
            grep Submitted $WORKSPACE/bkr_job2.txt >$WORKSPACE/bkr_jobnum2.txt
            BKR_JOBID2=`cut -d\' -f2 $WORKSPACE/bkr_jobnum2.txt`
            echo BKR_JOBID2=$BKR_JOBID2 >> $WORKSPACE/job1.properties
            echo BKR_JOBID2=$BKR_JOBID2 >> $WORKSPACE/job2html.txt
            BKR_JOBID2html=`cut -d\: -f2 $WORKSPACE/job2html.txt`
            echo 'BKR_JOBID2html='$BKR_JOBID2html >> $WORKSPACE/job1.properties

            ##########################
            #NIC="ixgbe"
            #Sanity Test 3: userspace_commands #
            ##########################
            rm -f $WORKSPACE/job3html.txt
            echo "Test 3: userspace_commands =============================================="
            cd /mnt/tests/kernel/networking/openvswitch/userspace_commands
            lstest | runtest $compose --variant=server --arch=x86_64 --machine=$machine --systype=machine --param=dbg_flag="set -x" \
            --param=RPM_OVS_SELINUX_EXTRA_POLICY=$RPM_OVS_SELINUX_EXTRA_POLICY --param=RPM_OVS=$RPM_OVS --cmd="yum install -y $RPM_CONTAINER_SELINUX_POLICY  policycoreutils-python;rpm -ivh --force $RPM_OVS_SELINUX_EXTRA_POLICY" \
            --wb="Interopt Rhel77-ovs29 userspace_commands $name $machine $BUILD_URL $fdp_release, $ovs_rpm_name, $compose, openvswitch/userspace_commands" |tee $WORKSPACE/bkr_job3.txt
            grep Submitted $WORKSPACE/bkr_job3.txt >$WORKSPACE/bkr_jobnum3.txt
            BKR_JOBID3=`cut -d\' -f2 $WORKSPACE/bkr_jobnum3.txt`
            echo BKR_JOBID3=$BKR_JOBID3 >> $WORKSPACE/job1.properties
            echo BKR_JOBID3=$BKR_JOBID3 >> $WORKSPACE/job3html.txt
            BKR_JOBID3html=`cut -d\: -f2 $WORKSPACE/job3html.txt`
            echo 'BKR_JOBID3html='$BKR_JOBID3html >> $WORKSPACE/job1.properties
            # Notes: removed nic_port0,1 and nic_port0,1 and NIC from job2 and job3 

        - inject:
            properties-file: $WORKSPACE/job1.properties
        - shell: |
            #!/bin/bash -x
            BKR_JOBID1=`cut -d\' -f2 $WORKSPACE/bkr_jobnum1.txt`
            echo $BKR_JOBID1 >> $WORKSPACE/job1.properties
            bkr job-watch $BKR_JOBID1
            bkr job-results --format junit-xml $BKR_JOBID1 > $WORKSPACE/jobid1.xml
            TESTS_JOB1=$(grep 'testsuite name' $WORKSPACE/jobid1.xml)
            echo $TESTS_JOB1

            #####################################################################
            # Get Beaker Job 1 job-results
            #####################################################################
            BKR_TESTS_JOB1_EXEC=0
            BKR_TESTS_JOB1_FAILED=0
            for jobid in $BKR_JOBID1; do
                bkr job-results --format junit-xml $jobid > $WORKSPACE/$jobid1.xml
                    for testsuite in $(grep hostname $WORKSPACE/$jobid1.xml); do
                        echo $testsuite | grep tests= && BKR_TESTS_JOB1_EXEC=$((BKR_TESTS_JOB1_EXEC+$(echo $testsuite | cut -d'"' -f2)))
                        echo $testsuite | grep failures= && BKR_TESTS_JOB1_FAILED=$((BKR_TESTS_JOB1_FAILED+$(echo $testsuite | cut -d'"' -f2)))
                    done
                done
            echo BKR_TESTS_JOB1_EXEC=$BKR_TESTS_JOB1_EXEC >> $WORKSPACE/job1.properties
            echo BKR_TESTS_JOB1_FAILED=$BKR_TESTS_JOB1_FAILED >> $WORKSPACE/job1.properties
            BKR_TESTS_JOB1=('[{{"executor": "beaker", "arch": "'"$ARCH"'", "executed": "'"$BKR_TESTS_JOB1_EXEC"'", "failed": "'"$BKR_TESTS_JOB1_FAILED"'"}}]')
            echo $BKR_TESTS_JOB1
            echo "BKR_TESTS_JOB1=$BKR_TESTS_JOB1" >> $WORKSPACE/job1.properties


            #!/bin/bash -x
            BKR_JOBID2=`cut -d\' -f2 $WORKSPACE/bkr_jobnum2.txt`
            echo BKR_JOBID2=$BKR_JOBID2 >> $WORKSPACE/job1.properties
            bkr job-watch $BKR_JOBID2
            bkr job-results --format junit-xml $BKR_JOBID2 > $WORKSPACE/jobid1.xml
            TESTS_JOB2=$(grep 'testsuite name' $WORKSPACE/jobid2.xml)
            echo $TESTS_JOB2

            #####################################################################
            # Get Beaker Job 2 job-results
            #####################################################################
            BKR_TESTS_JOB2_EXEC=0
            BKR_TESTS_JOB2_FAILED=0
            for jobid in $BKR_JOBID2; do
                bkr job-results --format junit-xml $jobid > $WORKSPACE/$jobid2.xml
                    for testsuite in $(grep hostname $WORKSPACE/$jobid2.xml); do
                        echo $testsuite | grep tests= && BKR_TESTS_JOB2_EXEC=$((BKR_TESTS_JOB2_EXEC+$(echo $testsuite | cut -d'"' -f2)))
                        echo $testsuite | grep failures= && BKR_TESTS_JOB2_FAILED=$((BKR_TESTS_JOB2_FAILED+$(echo $testsuite | cut -d'"' -f2)))
                    done
                done
            echo BKR_TESTS_JOB2_EXEC=$BKR_TESTS_JOB2_EXEC >> $WORKSPACE/job1.properties
            echo BKR_TESTS_JOB2_FAILED=$BKR_TESTS_JOB2_FAILED >> $WORKSPACE/job1.properties
            BKR_TESTS_JOB2=('[{{"executor": "beaker", "arch": "'"$ARCH"'", "executed": "'"$BKR_TESTS_JOB2_EXEC"'", "failed": "'"$BKR_TESTS_JOB2_FAILED"'"}}]')
            echo $BKR_TESTS_JOB2
            echo "BKR_TESTS_JOB2=$BKR_TESTS_JOB2" >> $WORKSPACE/job1.properties

            #echo $?
            #!/bin/bash -x
            BKR_JOBID3=`cut -d\' -f2 $WORKSPACE/bkr_jobnum3.txt`
            echo BKR_JOBID3=$BKR_JOBID3 >> $WORKSPACE/job1.properties
            bkr job-watch $BKR_JOBID3
            #echo $?
            bkr job-results --format junit-xml $BKR_JOBID3 > $WORKSPACE/jobid3.xml
            TESTS_JOB3=$(grep 'testsuite name' $WORKSPACE/jobid3.xml)
            echo $TESTS_JOB3

            #####################################################################
            # Get Beaker Job 3 job-results
            #####################################################################
            BKR_TESTS_JOB3_EXEC=0
            BKR_TESTS_JOB3_FAILED=0
            for jobid in $BKR_JOBID3; do
                bkr job-results --format junit-xml $jobid > $WORKSPACE/$jobid3.xml
                    for testsuite in $(grep hostname $WORKSPACE/$jobid3.xml); do
                        echo $testsuite | grep tests= && BKR_TESTS_JOB3_EXEC=$((BKR_TESTS_JOB3_EXEC+$(echo $testsuite | cut -d'"' -f2)))
                        echo $testsuite | grep failures= && BKR_TESTS_JOB3_FAILED=$((BKR_TESTS_JOB3_FAILED+$(echo $testsuite | cut -d'"' -f2)))
                    done
                done
            echo BKR_TESTS_JOB3_EXEC=$BKR_TESTS_JOB3_EXEC >> $WORKSPACE/job1.properties
            echo BKR_TESTS_JOB3_FAILED=$BKR_TESTS_JOB3_FAILED >> $WORKSPACE/job1.properties
            BKR_TESTS_JOB3=('[{{"executor": "beaker", "arch": "'"$ARCH"'", "executed": "'"$BKR_TESTS_JOB3_EXEC"'", "failed": "'"$BKR_TESTS_JOB3_FAILED"'"}}]')
            echo $BKR_TESTS_JOB3
            echo "BKR_TESTS_JOB3=$BKR_TESTS_JOB3" >> $WORKSPACE/job1.properties
            echo "TEST_RESULT=$BKR_JOBID1+BKR_JOBID2+BKR_JOBID3" >> $WORKSPACE/job1.properties

        # inject when all the env varables are all defined ??
        - inject:
            properties-file: $WORKSPACE/job1.properties

        - python: |
            import ast
            import json
            import os
            def main():
              """Build message to report rhel layered product results to interop qe."""
              # convert message to json object
              message = json.loads(os.getenv('CI_MESSAGE'))
              print("Triggered CI Message:\n{}".format(json.dumps(message, indent=4)))
              # update contact object in the message
              message['contact'].update(
                {{
                     "name": "Fast Datapath QE RHEL 7.7 OVS 2.9 Interopt",
                     "team": "Fast Datapath QE",
                     "docs": os.environ['JENKINS_URL'],
                     "email": "bfubel@redhat.com",
                     "url": os.environ['JENKINS_URL']
                }}
              )
              # add run object to message
              message['run'] = {{
                     "url": os.environ['JENKINS_URL'],
                     "log": os.environ['JENKINS_URL'] + "console"
                }}

              # add test object to message
              message['test'] = {{
                     "category": "interoperability",
                     "namespace": "interop",
                     "type": "product-scenario",
                     "result": os.environ['TEST_RESULT'],
                     "xunit_urls": ast.literal_eval(os.environ['XUNIT_URLS'])
                }}

            print("product-scenario.test.complete message:\n{{}}".format(json.dumps(
                     message, indent=4)))

            # write message to properties file (java formatted)
            with open("return-ci-message.prop", "w") as f:
              f.write("RETURN_CI_MESSAGE={{}}".format(str(message)))


            if __name__ == "__main__":
                # Setting some environment variables with data needed to supply back to
                # interop qe. These will need to be adjusted based on the run
                if os.environ['BKR_TESTS_JOB1_FAILED']+os.environ['BKR_TESTS_JOB1_FAILED']+os.environ['BKR_TESTS_JOB1_FAILED'] == 0:
                  os.environ['TEST_RESULT'] = "passed"
                else:
                  os.environ['TEST_RESULT'] = "failed"
                os.environ['XUNIT_URLS'] = '["https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID1html.junit.xml",\
                "https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID2html.junit.xml",\
                "https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID3html.junit.xml"]'
                main()

 
        - inject:
            properties-file: $WORKSPACE/return-ci-message.prop

    publishers:
        # - postbuildscript:
        #     builders:
        #       - shell: 'echo "Shell execution"'


              # 'echo "Shell execution"'
 #           publishers:
         # - postbuildscript:
         #    mark-unstable-if-failed: true
            # builders:
            #   build-on:
            #     - SUCCESS
            #     - UNSTABLE
                # build-steps:
                #   - shell: |
                #       #!/bin/bash
                #       echo "Jenkins job failed or canceled - canceling any submitted Beaker jobs"
                #       bkr job-cancel ${{BKR_JOBID1}}
#       - postbuildscript:
        - jms-messaging:
            override-topic: "VirtualTopic.qe.ci.product-scenario.rywillia.test.complete"
            provider-name: Red Hat UMB
            msg-type: Custom
            msg-content: ${{RETURN_CI_MESSAGE}}

        - email-ext:
            recipients: bfubel@redhat.com
            subject: interopt/kernel-qe-ovs29-ci-rhel77-interopt $machine, $Compose, $BUILD_URL $RPM_OVS
            body: |
              Beaker Job "kernel/networking/Sanity_Check" job at https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID1html"}} Executed=${{ENV,var="BKR_TESTS_JOB1_EXEC"}} Failed=${{ENV,var="BKR_TESTS_JOB1_FAILED"}}
                          Results ${{ENV,var="BKR_TESTS_JOB1"}}
              Beaker Job "kernel/networking/ovs-dpdk-selinux" job at https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID2html"}} Tests executed=${{ENV,var="BKR_TESTS_JOB2_EXEC"}} Tests failed=${{ENV,var="BKR_TESTS_JOB2_FAILED"}}
                          Results ${{ENV,var="BKR_TESTS_JOB2"}}
              Beaker Job "kernel/networking/openvswitch/userspace_commands" job at https://beaker.engineering.redhat.com/jobs/${{ENV,var="BKR_JOBID3html"}} Tests executed=${{ENV,var="BKR_TESTS_JOB3_EXEC"}} Tests failed=${{ENV,var="BKR_TESTS_JOB3_FAILED"}}
                          Results ${{ENV,var="BKR_TESTS_JOB3"}}

              
              interopt/kernel-qe-ovs-ci-rhel77-nightly
              Notes, ${{ENV,var="NOTES"}}
              $BUILD_URL,Sanity_Check,${{ENV,var="BKR_TESTS_JOB1_EXEC"}},${{ENV,var="BKR_TESTS_JOB1_FAILED"}},ovs-dpdk-selinux,${{ENV,var="BKR_TESTS_JOB2_EXEC"}},${{ENV,var="BKR_TESTS_JOB2_FAILED"}},userspace_commands,${{ENV,var="BKR_TESTS_JOB3_EXEC"}},${{ENV,var="BKR_TESTS_JOB3_FAILED"}}
              Job Parameters
              Compose,${{ENV,var="Compose"}}
              RPM_OVS,${{ENV,var="RPM_OVS"}}
              RPM_CONTAINER_SELINUX_POLICY,${{ENV,var="RPM_CONTAINER_SELINUX_POLICY"}}
              RPM_OVS_SELINUX_EXTRA_POLICY,${{ENV,var="RPM_OVS_SELINUX_EXTRA_POLICY"}}
              fdp_release,${{ENV,var="fdp_release"}}
              machine,${{ENV,var="machine"}}
              nic_port0,${{ENV,var="nic_port0"}}
              nic_port1,${{ENV,var="nic_port1"}}
              ARCH,${{ENV,var="ARCH"}}

            notify-every-unstable-build: false
            send-to-individuals: true
            always: true
        - workspace-cleanup:
        #   include:
        #       - "*"
        #   exclude:
        #       #need resources file to trigger teardown job
        #       - "job1.properties.txt"
        #   dirmatch: true
            clean-if:
                - success: true
                - not-built: true


- project:
    name: kernel-qe
    jobs:
      - 'Interopt/kernel-qe-ovs29-ci-rhel77-interopt'
###########################################################
#                        History                          #
###########################################################
#Date            Modifier    Details
#19-Aug-2019     bfubel    Created off 7.7 Nightly Build
#                          Need to Change to 8.1 Image. starting with 7.7 to get baseline
#                          Removed Referance to OVS_RPM. needs to be RPM_OVS
#                         
